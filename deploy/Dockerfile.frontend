# Multi-stage build for frontend
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY nx.json ./
COPY tsconfig*.json ./

# Copy workspace configuration
COPY apps/dv/package.json ./apps/dv/
COPY apps/dv/rsbuild.config.ts ./apps/dv/
COPY apps/dv/tsconfig*.json ./apps/dv/

# Install dependencies
RUN npm ci --legacy-peer-deps

# Copy source code
COPY apps/dv/src ./apps/dv/src
COPY apps/dv/src/index.html ./apps/dv/src/
COPY libs ./libs
COPY apps/dv/src/assets ./apps/dv/src/assets

# Build the application
RUN npx nx build dv --prod

# Production stage
FROM nginx:alpine

# Copy built application
COPY --from=builder /app/apps/dv/dist /usr/share/nginx/html

# Copy nginx configuration
COPY deploy/nginx.conf /etc/nginx/nginx.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 